{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prasanna-2128\\\\OneDrive\\\\Desktop\\\\FoodOrderApp\\\\src\\\\store\\\\cartProvider.js\",\n    _s = $RefreshSig$();\n\nimport Cartcontext from './cart-context';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.d === action.item.id);\n    const existingCartItem = state.items[existingCartItem];\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultcartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultcartState);\n\n  const addItemHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemhandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemHandler,\n    removeItem: removeItemhandler\n  };\n  return /*#__PURE__*/_jsxDEV(Cartcontext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"LNT8WMVlKG+Wu/vNSGVXsQJMczI=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/Prasanna-2128/OneDrive/Desktop/FoodOrderApp/src/store/cartProvider.js"],"names":["Cartcontext","useReducer","defaultcartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","price","amount","existingCartItemIndex","findIndex","d","id","existingCartItem","CartProvider","props","cartState","dispatchCartAction","addItemHandler","removeItemhandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAE,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC/B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EAAuB;AACnB,UAAMC,YAAY,GAAEH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAApB;AACA,UAAMC,kBAAkB,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAA/E;AAEA,UAAMC,qBAAqB,GAAET,KAAK,CAACH,KAAN,CAAYa,SAAZ,CAC5BL,IAAD,IAAQA,IAAI,CAACM,CAAL,KAASV,MAAM,CAACI,IAAP,CAAYO,EADA,CAA7B;AAIA,UAAMC,gBAAgB,GAAEb,KAAK,CAACH,KAAN,CAAYgB,gBAAZ,CAAxB;AACA,WAAO;AACHhB,MAAAA,KAAK,EAACM,YADH;AAEHL,MAAAA,WAAW,EAACQ;AAFT,KAAP;AAIH;;AACD,SAAOV,gBAAP;AACH,CAhBD;;AAkBA,MAAMkB,YAAY,GAACC,KAAK,IAAE;AAAA;;AAEtB,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAA+BtB,UAAU,CAACI,WAAD,EAAaH,gBAAb,CAA/C;;AACA,QAAMsB,cAAc,GAAEb,IAAD,IAAQ;AACzBY,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAC,KAAN;AAAYG,MAAAA,IAAI,EAACA;AAAjB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMc,iBAAiB,GAAGP,EAAD,IAAM;AAC3BK,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAC,QAAN;AAAeU,MAAAA,EAAE,EAACA;AAAlB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMQ,WAAW,GAAE;AACfvB,IAAAA,KAAK,EAACmB,SAAS,CAACnB,KADD;AAEfC,IAAAA,WAAW,EAACkB,SAAS,CAAClB,WAFP;AAGfuB,IAAAA,OAAO,EAACH,cAHO;AAIfI,IAAAA,UAAU,EAACH;AAJI,GAAnB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMT,Y;;KAAAA,Y;AAuBN,eAAeA,YAAf","sourcesContent":["import Cartcontext from './cart-context'\r\nimport { useReducer } from 'react'\r\n\r\nconst defaultcartState={\r\n    items:[],\r\n    totalAmount:0\r\n}\r\n\r\nconst cartReducer =(state,action)=>{\r\n    if(action.type==='ADD'){\r\n        const updatedItems =state.items.concat(action.item)\r\n        const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n\r\n        const existingCartItemIndex =state.items.findIndex(\r\n        (item)=>item.d===action.item.id\r\n        )\r\n\r\n        const existingCartItem =state.items[existingCartItem];\r\n        return {\r\n            items:updatedItems,\r\n            totalAmount:updatedTotalAmount\r\n        }\r\n    }\r\n    return defaultcartState\r\n}\r\n\r\nconst CartProvider=props=>{\r\n\r\n    const [cartState,dispatchCartAction]=useReducer(cartReducer,defaultcartState)\r\n    const addItemHandler=(item)=>{\r\n        dispatchCartAction({type:'ADD',item:item})\r\n    }\r\n    const removeItemhandler =(id)=>{\r\n        dispatchCartAction({type:'REMOVE',id:id})\r\n    }\r\n    const cartContext ={\r\n        items:cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem:addItemHandler,\r\n        removeItem:removeItemhandler\r\n\r\n    }\r\n    return(\r\n        <Cartcontext.Provider value={cartContext}>\r\n            {props.children}\r\n        </Cartcontext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider"]},"metadata":{},"sourceType":"module"}